1.  select count(*)
    from production.product 

2.  select count(*)
    from production.product
    where productsubcategoryid is not null

3.  select productsubcategoryid as productsubcategoryid,count(*) as countedproducts
    from production.product
    where productsubcategoryid is not null
    group by productsubcategoryid

4.  select count(*) as productswithoutsubcategory
    from production.product
    where  productSubcategoryid is null

5.  SELECT 
    ProductID,
    SUM(Quantity) AS TotalQuantity
    FROM 
    Production.ProductInventory
    GROUP BY 
    ProductID
    ORDER BY 
    ProductID

6.  SELECT ProductID,SUM(Quantity) AS TheSum
    FROM Production.ProductInventory
    WHERE LocationID = 40
    GROUP BY ProductID
    HAVING  SUM(Quantity) < 100
    ORDER BY ProductID;
    
7.  SELECT 
    Shelf,
    ProductID,
    SUM(Quantity) AS TheSum
FROM 
    Production.ProductInventory
WHERE 
    LocationID = 40
GROUP BY 
    Shelf, ProductID
HAVING 
    SUM(Quantity) < 100
ORDER BY 
    Shelf, ProductID;


8. SELECT  AVG(Quantity) AS AverageQuantity
    
   FROM Production.ProductInventory

   WHERE   LocationID = 10;

   LocationID = 10;


9.  SELECT ProductID, Shelf,AVG(Quantity) AS TheAvg 
    FROM Production.ProductInventory
    GROUP BY     ProductID, Shelf
    ORDER BY  Shelf, ProductID;

10. SELECT ProductID, Shelf,AVG(Quantity) AS TheAvg
    FROM Production.ProductInventory
    WHERE Shelf <> 'N/A'
    GROUP BY  ProductID, Shelf
    ORDER BY Shelf, ProductID

11. SELECT Color,Class, COUNT(*) AS TheCount,AVG(ListPrice) AS AvgPrice

   FROM Production.Product

   WHERE Color IS NOT NULL AND Class IS NOT NULL

   GROUP BY Color, Class
    
   ORDER BY Color, Class;


12. SELECT  c.Name AS Country,s.Name AS Province
    FROM Person.CountryRegion AS c
    JOIN  Person.StateProvince AS s ON c.CountryRegionCode = s.CountryRegionCode
    ORDER BY c.Name, s.Name


13. SELECT cr.CountryRegionName AS Country,sp.StateProvinceName AS Province

    FROM person.CountryRegion cr

    JOIN person.StateProvince sp ON cr.CountryRegionCode = sp.CountryRegionCode

    WHERE cr.CountryRegionName IN ('Germany', 'Canada')

    ORDER BY cr.CountryRegionName, sp.StateProvinceName;


14. SELECT P.ProductID, P.ProductName, O.OrderDate
    FROM Products AS P
    JOIN [Order Details] AS OD ON P.ProductID = OD.ProductID
    JOIN Orders AS O ON OD.OrderID = O.OrderID
    WHERE O.OrderDate >= DATEADD(YEAR, -27, GETDATE())
    ORDER BY O.OrderDate DESC;

15. SELECT TOP 5 C.postalcode, COUNT(OD.ProductID) AS TotalProductsSold
    FROM Orders AS O
    JOIN [Order Details] AS OD ON O.OrderID = OD.OrderID
    JOIN Customers AS C ON O.CustomerID = C.CustomerID
    GROUP BY C.postalcode
    ORDER BY TotalProductsSold DESC;

16.SELECT TOP 5 C.PostalCode, COUNT(OD.ProductID) AS TotalProductsSold
   FROM Orders AS O
   JOIN [Order Details] AS OD ON O.OrderID = OD.OrderID
   JOIN Customers AS C ON O.CustomerID = C.CustomerID
   WHERE O.OrderDate >= DATEADD(YEAR, -27, GETDATE()) 
   GROUP BY C.PostalCode
   ORDER BY TotalProductsSold DESC

17. SELECT C.City, COUNT(C.CustomerID) AS NumberOfCustomers
    FROM Customers AS C
    GROUP BY C.City
    ORDER BY NumberOfCustomers DESC

18. SELECT C.City, COUNT(C.CustomerID) AS NumberOfCustomers
    FROM Customers AS C
    GROUP BY C.City
    HAVING COUNT(C.CustomerID) > 2 


19. SELECT C.ContactName,  O.OrderDate
   FROM Customers AS C
   JOIN Orders AS O ON C.CustomerID = O.CustomerID  
   WHERE O.OrderDate > '1998-01-01'  
   ORDER BY O.OrderDate DESC


20.  WITH MostRecentOrders AS 
    (
    SELECT CustomerID, 
           MAX(OrderDate) AS MostRecentOrderDate
    FROM Orders
    GROUP BY CustomerID
   )
SELECT C.ContactName, 
       MRO.MostRecentOrderDate
FROM Customers AS C
JOIN MostRecentOrders AS MRO 
ON C.CustomerID = MRO.CustomerID
ORDER BY MRO.MostRecentOrderDate DESC

21. SELECT C.ContactName, COUNT(OD.ProductID) AS ProductsBought
    FROM Customers AS C
    JOIN Orders AS O ON C.CustomerID = O.CustomerID 
    JOIN [Order Details] AS OD ON O.OrderID = OD.OrderID  
    GROUP BY C.ContactName
    ORDER BY ProductsBought DESC

22. SELECT C.CustomerID, COUNT(OD.ProductID) AS ProductsCount
    FROM Customers AS C
    JOIN Orders AS O ON C.CustomerID = O.CustomerID  
    JOIN [Order Details] AS OD ON O.OrderID = OD.OrderID 
    GROUP BY C.CustomerID
    HAVING COUNT(OD.ProductID) > 100  
    ORDER BY ProductsCount DESC

23. SELECT S.CompanyName AS [Supplier Company Name], SH.CompanyName AS [Shipping Company Name]
    FROM Suppliers AS S
    CROSS JOIN Shippers AS SH  
    ORDER BY S.CompanyName, SH.CompanyName

24. SELECT O.OrderDate AS [Order Date],  P.ProductName AS [Product Name]
    FROM Orders AS O
    JOIN [Order Details] AS OD ON O.OrderID = OD.OrderID 
    JOIN Products AS P ON OD.ProductID = P.ProductID 

25. SELECT E1.EmployeeID AS [Employee 1 ID], 
       CONCAT(E1.FirstName, ' ', E1.LastName) AS [Employee 1 Name], 
       E2.EmployeeID AS [Employee 2 ID], 
       CONCAT(E2.FirstName, ' ', E2.LastName) AS [Em ployee 2 Name], 
       E1.Title AS [Title]  
   FROM Employees AS E1
   JOIN Employees AS E2 ON E1.Title = E2.Title  
   WHERE E1.EmployeeID <> E2.EmployeeID 
   ORDER BY E1.Title, E1.EmployeeID, E2.EmployeeID; 

26. SELECT M.EmployeeID AS [Manager ID], CONCAT(M.FirstName, ' ', M.LastName) AS [Manager Name], 
    COUNT(E.EmployeeID) AS [Number of Employees]
    FROM Employees AS M
    JOIN Employees AS E ON M.EmployeeID = E.ReportsTo  
    GROUP BY M.EmployeeID, M.FirstName, M.LastName 
    HAVING COUNT(E.EmployeeID) > 2 
    ORDER BY M.EmployeeID;

27. SELECT C.City AS [City], 
       C.CompanyName AS [Name], 
       C.ContactName AS [Contact Name], 
       'Customer' AS [Type]  
    FROM Customers AS C

    UNION ALL

    SELECT S.City AS [City], 
       S.CompanyName AS [Name], 
       S.ContactName AS [Contact Name], 
       'Supplier' AS [Type]  
    FROM Suppliers AS S
    ORDER BY City, Type;



    

   

    



























